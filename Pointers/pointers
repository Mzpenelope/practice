POINTERS
=====================
how to point one variable to another integer variable's memory location or address 
as demonstrated below
#include <stdio.h>
/**
 * main - Entry point
 * description - practice
 * int main(void) - printfs code
 */
int main(void)
{
        int j = 10;
        int* m = &j;
        printf("%d\n", j);
        printf("%p\n", &j);
        printf("%p\n", m);
        return 0;
}
how to print the memory address and value of a pointer
#include <stdio.h>
/**
 * main - Entry point
 * description - practice
 * int main(void) - printfs code
 */
int main(void)
{
        int j = 10;
        int* m = &j;
        printf("%p\n", m);
        printf("%d\n", *m);
        return 0;
}
in case where the pointer variable is not specified and the %p specifier is used 
it printfs the memory address of the variables first element as demonstrated below
#include <stdio.h>
/**
 * main - Entry point
 * description - practice
 * int main(void) - printfs code
 */
int main(void)
{
        int j[3] = {5, 10, 15};
        printf("%p\n", j);
        printf("%p\n", &j[0]);
        return 0;
}
in case where the pointer variable is not specified and the *variable is used 
it printfs the value of the variables first element as demonstrated below
#include <stdio.h>
/**
 * main - Entry point
 * description - practice
 * int main(void) - printfs code
 */
int main(void)
{
        int j[3] = {5, 10, 15};
        printf("%d\n", *j);
        return 0;
}
how to use an unspecified pointer to printf the other values of elements in an array
as demonstrated below
#include <stdio.h>
/**
 * main - Entry point
 * description - practice
 * int main(void) - printfs code
 */
int main(void)
{
        int j[3] = {5, 10, 15};
        printf("%d\n", *(j + 1));
        printf("%d\n", *(j + 2));
        return 0;
}
how to use an unspecified pointer to printf the other values of elements in an array
using for loops as demonstrated below
#include <stdio.h>
/**
 * main - Entry point
 * description - practice
 * int main(void) - printfs code
 */
int main(void)
        int j[3] = {5, 10, 15};
        int *m = j;
        int v;
        for (v = 0; v < 3; v++)
        {
                printf("%d\n", *(m + v));
        }
        return 0;
}
how to use pointers to change or modify elements in an array as demonstrated below
#include <stdio.h>
/**
 * main - Entry point
 * description - practice
 * int main(void) - printfs code
 */
int main(void)
{
        int j[3] = {5, 10, 15};
        *j = 2;
        *(j + 1) = 4;
        *(j + 2) = 6;
        int i;
        for (i = 0; i < 3; i++)
        {
                printf("%d\n", *(j + i));
        }
        return 0;
}
