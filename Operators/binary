The binary representation of a number is calculated by repeatedly dividing the number by 2, and keeping track of the remainder at each step.
The remainders are then read in reverse order to get the binary representation of the number.
For example, let's say we want to find the binary representation of the decimal number 19. Here are the steps:
Divide 19 by 2. The result is 9 with a remainder of 1.
Divide 9 by 2. The result is 4 with a remainder of 1.
Divide 4 by 2. The result is 2 with a remainder of 0.
Divide 2 by 2. The result is 1 with a remainder of 0.
Divide 1 by 2. The result is 0 with a remainder of 1.
So the remainders, read in reverse order, are 10011. This is the binary representation of 19.
Note that the number of bits required to represent a decimal number in binary depends on the magnitude of the number. 
In the case of 19, it requires 5 bits because the largest power of 2 that is less than or equal to 19 is 16, which is 2^4. 
Therefore, we need at least 4 bits to represent the number 19. The next power of 2 is 32, which is 2^5, so we need 5 bits in total.
